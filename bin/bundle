#!/bin/bash

set -eo pipefail

e_header()   { echo -e "\n\033[1m$@\033[0m"; }
e_success()  { echo -e " \033[1;32m✔\033[0m  $@"; }
e_error()    { echo -e " \033[1;31m✖\033[0m  $@"; }
e_arrow()    { echo -e " \033[1;33m➜\033[0m  $@"; }

DOTHOME="$(dirname "$(cd "$(dirname "$0")" && pwd -P)")"

BACKDIR="$DOTHOME/config/backups/$(date "+%Y_%m_%d-%H_%M_%S")/"

dir() {
  mkdir -p "$1"
  cd "$1"
}

clone() {
  repo_url="https://github.com/$1"
  clone_dir="$1"
  # remove everything upuntil last slash
  clone_dir="${repo_url##*/}"
  # remove trailing .git if passed
  clone_dir="${clone_dir%.git}"

  if [ ! -d "$clone_dir" ]; then
    git clone --depth 1 "$repo_url" "$clone_dir"
  fi
}

main() {
  e_header "Linking files into home directory..."
  
  cd "$HOME"
  for file in $DOTHOME/[a-z]*; do
    local base="$(basename $file)"
    local dest="$HOME/.$base"
  
    # Skip if link is the same.
    if test "$file" -ef "$dest"; then
      e_success "$base"
      continue
    fi
  
    # Back up file if it exists.
    if [[ -e "$dest" ]]; then
      e_arrow "Backing up $HOME/$base."
      inform_about_backup=1
      mkdir -p "$BACKDIR"
      mv "$dest" "$BACKDIR"
    fi
  
    if [[ -L "$dest" ]]; then
      rm "$dest"
    fi
  
    ln -sf "${file#$HOME/}" ".$base"
    e_success "$base"
  done
  
  e_header "Removing broken symlinks from home directory..."
  find ~ -maxdepth 1 -type l | while read file; do
    if [ ! -e "$file" ]; then
      local base="$(basename $file)"
      e_success "$file"
      rm "$file"
    fi
  done
  
  if [[ $inform_about_backup == 1 ]]; then
    echo "\nBackups were moved to $BACKDIR\n"
  fi
  
  if [[ $first_run == 1 ]]; then
    echo "\nInstallation complete! You can relogin now."
  else
    echo "" # it's visually better ;)
  fi
}

source ~/.config/Bundlefile
main
